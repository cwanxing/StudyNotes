********* 路由版本：0.7.13 ***********
需要的文件：
    |-index.html
    |-main.js	         入口文件
    |-App.vue	         vue文件，官方推荐命名法
    |-package.json	     工程文件(项目依赖、名称、配置)
        npm init --yes 生成
    |-webpack.config.js	 webpack配置文件

需求：
    1. 一个页面有主页【home】、新闻页【new】
    2. 主页 ==> 内容 | 新闻 ==> 内容

路由配合
1. 安装模块 cnpm install vue-router【@0.7.13 需要版本的话】
2. import 路由名【自己写的】 from 'vue-router'
3. 在创建vue实例前，Vue.use(引入时你取的名字)
4. 配置路由【具体还是看例子，说不清】
    1. router.map({
        '链接地址':{
            component:'import 名称 from ‘其他模块.vue’'
        },
        '链接地址':{
            component:'import 名称 from ‘其他模块.vue’'
        }
    })
    2. router.start(import 名称 from ‘主模块.vue’, 'index.html中容器')
5. 不用路由：
        使用模块
          index.html  <app></app><my-aaa></my-aaa>
   用路由：
        使用模块
          1. index.html  div#app
          2. App.vue   template>div#app 【div#app 必须和index.html中一样】


|-index.html:
    div#app  #6# 这是虚拟元素，最终是要被替换的【就好比占了位置】
                 App.vue 中没有父级div【div#app】
                    你想想，加载过来后，全部是散的，得有个盒子装着吧【大致就是那个意思吧】
                 App.vue 中有父级div【div#app】
                    你再想想，加载过来后，全部都包着的多好
             注：重点理解还是index.html中的div#app是要被删除的
             当然，App.vue中没有，也可用 但会【vue warn 警告】
    <script src="build.js"></script>

|-main.js：
    import Vue from 'vue'
    import App from './App.vue' #1# 路由启动时的名称
    import VueRouter from 'vue-router'


    Vue.use(VueRouter);

    引入主页和新闻内容
        import Home from './Home.vue' #4#
        import News from './New.vue' #5#
        主页下的分页【路由嵌套】
            import Login from './homeLogin.vue';
            import Reg fro './homeReg.vue';
        新闻页下的分类：【路由嵌套】
            import Detail from './Detail.vue';

    路由配置：
        1. 创建路由
        const router = new VueRouter();
        2. 配置地址
        router.map({
            '/home':{ #2# 和App.vue 中 v-link="{path:'/home'}" 的 home 一致
                component:Home,
                subRoutes:{
                    'login':{
                        component:Login
                    },
                    'reg':{
                        component:Reg
                    }
                }
            },
            '/new':{ #3# 和App.vue 中 v-link="{path:'/new'}" 的 new 一致
                component:News,
                subRoutes:{
                    'detail/:id':{ #00#
                        component:Detail
                    }
                }
            }
        })

        3. 启动
        router.start(App, '#app') #1# App => App.vue文件，上面必须引用进来
                                  #6# '#app' => index.html 中 容器的id【必须一样】

        4. 默认跳转主页
         router.redirect({
            '/':'/home' 【访问根的时候，跳转home页】
         });


    new Vue({
        components:{
            msg:'this is wyigegasdfd'
        }
    }).$mount('body');

|-App.vue : 首页
    template>
        div#app ！！ 和index.html中的盒子必须一样【同样的 id】
            <h2>标题：vue-loader + vue-router</h2>
            a v-link="{path:'/home'}" 主页 #2#
            a v-link="{path:'/new'}" 新闻 #3#

        <h4>下面这个实必须的，总得有个地方显示吧！</h4>
        <router-view></router-view>

    script>
    style> 小扩展
        .v-link-actives{
            // 此样式：当我点击【因为用的是a v-link...】时，会为 a 添加这个类【可以偷个懒】
        }

|-Home.vue：主页内容 #4#
    template>
        <h2>我是主页</h2>
        ul>li
            a v-link="{path:'/home/login'}" 用户登录
            a v-link="{path:'/home/reg'}" 用户注册
            div.box>
                <router-view></router-view>
    script>
    style scope【只有此页能用】
        .box{ border:1px solid red }

|-New.vue：新闻内容 #5#
    template>
        <h2>我是新闻页</h2>
        ul>li
            a v-link="{path:'/new/detail/001'}" this is first news
            a v-link="{path:'/new/detail/002'}" this is second news
        <router-view></router-view>
    script>

|-homeLogin.vue
     template>
            <h2>我是注册页</h2>
     script>

|-homeReg.vue
     template>
            <h2>我是登页</h2>
     script>

|-Detail.vue
     template>
            <h2>新闻页</h2>
            {{$route.params | json}}
            {{$route.query | json}}
     script>

来看一下手动写的效果：
    没有加redirect【默认加载那一页】时
        router.redirect({ '/':'/home' });
        URl：localhost:8080/#/
    加了后
        URl：localhost:8080/#/home
    home 和 new 来回切换：
        URl：localhost:8080/#/home(new)
    进入登录注册时
        URl：localhost:8080/#/home/login(reg)
    进入新闻页(分有新闻001，新闻002，按需求完后自加)
        URl：localhost:8080/#/new/detail/001(002)
        显示：
            新闻(高亮)
            this is first news
            -- 高亮时 url：localhost:8080/#/new/detail/001

            this is second news
            -- 高亮时 url：localhost:8080/#/new/detail/002

    Detail.vue下面两个到底显示什么？？
            {{$route.params | json}} // {"id" : "001(002)"} 属性值 id #00# 这里就显示什么
            subRoutes:{ // 这是new下的子页
                'detail/:id':{ #00# 这里写什么
                    component:Detail
                }
            }
            {{$route.query | json}}
            // 这个用户数据【不好理解】：
            localhost:8080/#/new/detail/002?a=1&b=2
            效果：{"id" : "002"}
                 {"a":"1", "b":"2"} // 没有则显示 {} 号



单独配置路由：【引用index.js文件既可】
router-confing.js

    import Home from './Home.vue' #4#
    import News from './New.vue' #5#

    export default{
        'home':{ #2# 和App.vue 中 v-link="{path:'/home'}" 的 home 一致
            component:Home
        },
        'new':{ #3# 和App.vue 中 v-link="{path:'/new'}" 的 new 一致
            component:News
        }
    }

----------------------------------------------------------------------

脚手架

vue-cli --> vue脚手架
    用它生成项目模板的话，它为你提供了一些模板
    simple          基本没用

    webpack         适用大型项目
                    Eslint 自动检查代码
                    单元测试：

    webpack-simple
                    没有Eslint/单元测试

流程：
    1. npm install vue-cli -g  安装vue命令环境
        验证安装成功 vue --version 出现版本成功

    2. 生成项目模板
        vue init <模板名[#版本号]> <本地文件夹名称>
        比如：vue init webpack-simple#1.1.0 saveFiles

    3. 进入项目
        cd xxx<你自己命名>
        cnpm install 【安装依赖】

    4. 运行
        运行      npm run dev
        打包压缩   npm run build






















|-package.json：
    {
      "name": "vue-loader-demo",
      "version": "1.0.0",
      "description": "",
      "main": "main.js",
      "scripts": {
        "dev": "webpack-dev-server --inline --hot --port 8082"
      },
      "keywords": [],
      "author": "",
      "license": "ISC",
      "devDependencies": {
        "babel-core": "^6.17.0",
        "babel-loader": "^6.2.5",
        "babel-plugin-transform-runtime": "^6.15.0",
        "babel-preset-es2015": "^6.16.0",
        "babel-runtime": "^6.11.6",
        "css-loader": "^0.25.0",
        "vue-hot-reload-api": "^1.3.2",
        "vue-html-loader": "^1.2.3",
        "vue-loader": "^8.5.4",
        "vue-style-loader": "^1.0.0"
      },
      "dependencies": {
        "vue": "^1.0.28"
      }
    }

|-webpack.config.js
    module.exports={
    	entry:'./main.js',

    	output:{
    		path:__dirname,
    		filename:'build.js'
    	},

    	module:{
    		loaders:[
    			{test:/\.vue$/, loader:'vue'},
    			{test:/\.js$/, loader:'babel', exclude:/node_modules/}
    		]
    	},
    	babel:{
    		presets:['es2015'],
    		plugins:['transform-runtime']
    	}
    };


